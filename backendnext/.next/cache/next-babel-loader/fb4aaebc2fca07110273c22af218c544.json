{"ast":null,"code":"\"use strict\";\n\nvar _isomorphicUnfetch = _interopRequireDefault(require(\"isomorphic-unfetch\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = {\n  fetchPromised: function (url, timeout) {\n    return new Promise((resolve, reject) => {\n      fetchAsync(url, timeout, resolve, reject);\n    });\n  },\n  Send_Post_RestAPI: function (url, data) {\n    return new Promise((resove, reject) => {\n      const res = (0, _isomorphicUnfetch.default)(url, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }); //reject('error');\n\n      resove(res);\n    });\n  },\n  Send_Get_RestAPI: function (url) {\n    return new Promise((resove, reject) => {\n      const res = (0, _isomorphicUnfetch.default)(url, {\n        method: 'GET',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8',\n          'Accept': 'application/json'\n        }\n      }); //reject('error');\n\n      resove(res);\n    });\n  }\n};","map":{"version":3,"sources":["D:/Thanh/backup/CDKTDL/CDKTDL/backendnext/Request/imw_request.js"],"names":["module","exports","fetchPromised","url","timeout","Promise","resolve","reject","fetchAsync","Send_Post_RestAPI","data","resove","res","method","mode","headers","body","JSON","stringify","Send_Get_RestAPI"],"mappings":";;AAAA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACTC,EAAAA,aAAa,EAAE,UAAUC,GAAV,EAAeC,OAAf,EAAyB;AACtC,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,MAAAA,UAAU,CAACL,GAAD,EAAMC,OAAN,EAAeE,OAAf,EAAwBC,MAAxB,CAAV;AACH,KAFM,CAAP;AAGH,GALU;AAMbE,EAAAA,iBAAiB,EAAE,UAASN,GAAT,EAAaO,IAAb,EAAkB;AACjC,WAAO,IAAIL,OAAJ,CAAY,CAACM,MAAD,EAASJ,MAAT,KAAkB;AACjC,YAAMK,GAAG,GAAG,gCAAMT,GAAN,EAAU;AAClBU,QAAAA,MAAM,EAAE,MADU;AAElBC,QAAAA,IAAI,EAAE,MAFY;AAGlBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,iCADT;AAEP,oBAAU;AAFH,SAHS;AAOlBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AAPY,OAAV,CAAZ,CADiC,CAUjC;;AACAC,MAAAA,MAAM,CAACC,GAAD,CAAN;AACH,KAZM,CAAP;AAaH,GApBY;AAqBbO,EAAAA,gBAAgB,EAAE,UAAShB,GAAT,EAAa;AAC7B,WAAO,IAAIE,OAAJ,CAAY,CAACM,MAAD,EAASJ,MAAT,KAAkB;AACjC,YAAMK,GAAG,GAAG,gCAAMT,GAAN,EAAU;AAClBU,QAAAA,MAAM,EAAE,KADU;AAElBC,QAAAA,IAAI,EAAE,MAFY;AAGlBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,iCADT;AAEP,oBAAU;AAFH;AAHS,OAAV,CAAZ,CADiC,CASjC;;AACAJ,MAAAA,MAAM,CAACC,GAAD,CAAN;AACH,KAXM,CAAP;AAYH;AAlCc,CAAjB","sourcesContent":["import fetch from 'isomorphic-unfetch';\n\nmodule.exports = {\n        fetchPromised: function (url, timeout)  {\n          return new Promise((resolve, reject) => {\n              fetchAsync(url, timeout, resolve, reject)\n          })\n      },\n    Send_Post_RestAPI: function(url,data){\n        return new Promise((resove, reject)=>{\n            const res = fetch(url,{\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                  'Content-Type': 'application/json; charset=utf-8',\n                  'Accept': 'application/json',\n                },\n                body: JSON.stringify(data)\n              });\n            //reject('error');\n            resove(res);\n        });\n    },\n    Send_Get_RestAPI: function(url){\n      return new Promise((resove, reject)=>{\n          const res = fetch(url,{\n              method: 'GET',\n              mode: 'cors',\n              headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'Accept': 'application/json',\n              }\n            });\n          //reject('error');\n          resove(res);\n      });\n  },\n}"]},"metadata":{},"sourceType":"script"}